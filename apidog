#!/usr/bin/env python3
# This Source Code Form is licensed MPL-2.0: http://mozilla.org/MPL/2.0
import sys, os

# Produce stderr messages
def printerr (*args, **kwargs):
  print (*args, file = sys.stderr, **kwargs)

# Print usage information
def usage (extended = False):
  print ("Usage: %s [OPTIONS|--help] {gentoc} [FILES...]" % os.path.basename (sys.argv[0]))
  if not extended: return
  print ("OPTIONS:")
  print ("  --help           print usage information")

# parse args and commands
cmd, files = None, []
i = 1
while i < len (sys.argv):
  if sys.argv[i] == '--verbose':
    verbose = True
  elif sys.argv[i] == '--help':
    usage (True)
    sys.exit (0)
  elif cmd == None:
    cmd = sys.argv[i]
  else:
    files += [ sys.argv[i] ]
  i += 1

# run commands
if cmd == 'gentoc' and files:
  # Given a pandoc generated HTML file, read all heading tags and generate a
  # <div id="TOC"/> section similar to pandoc --toc. In combination with adding
  # input file names to the TOC anchors, this can be used to generate a combined
  # TOC across multiple input HTML files.
  from aux import html
  print (html.gen_toc (files))
  sys.exit (0)
else:
  printerr ("%s: missing command with input files" % sys.argv[0])
  usage()
  sys.exit (1)
